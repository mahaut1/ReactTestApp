name: Build, Test and Deploy React Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm ci and test
        run: |
          cd react_test_app
          npm ci
          npm run jsdoc
          npm run build --if-present
          npm test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./react_test_app/coverage/clover.xml

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: react_test_app/build
          if-no-files-found: error

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" > ~/.npmrc

      - name: Check version
        run: |
          cd react_test_app
          LOCAL_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm show @mahautw/react_test_app version)
          if [ "$LOCAL_VERSION" != "$NPM_VERSION" ]; then
            echo "NEW_VERSION=true" >> $GITHUB_ENV
          else
            echo "NEW_VERSION=false" >> $GITHUB_ENV
          fi

      - name: Build and publish package on NPM
        if: env.NEW_VERSION == 'true'
        run: |
          cd react_test_app
          git config --global user.email "mwindal@hotmail.com"
          git config --global user.name "Mahaut Windal"
          npm run build-npm
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    needs: build_test
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4

  e2e_tests:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create .env file from GitHub Secrets
        run: |
          mkdir -p react_test_app
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> react_test_app/.env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> react_test_app/.env
          echo "REACT_APP_API_URL=http://localhost:8000" >> react_test_app/.env
      - name: Install dependencies
        run: |
            cd react_test_app
            npm ci
      - name: Start Docker Compose stack
        run: |
          cd react_test_app
          docker compose up -d --build
          docker compose ps
          docker compose logs db
          sleep 30

      - name: Run Cypress tests
        run: |
          cd react_test_app
          npx cypress run

      - name: Shutdown Docker Compose
        if: always()
        run: |
          cd react_test_app
          docker compose down
