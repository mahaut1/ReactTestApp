name: Build, Test and Deploy React Application
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x] # Node.js version
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci and test
        run: |
            cd react_test_app
            npm ci
            npm run jsdoc
            npm run build --if-present
            npm test
   # Vérification si JSDoc a été généré
      - name: Vérifier si JSDoc a été généré
        run: |
          if [ ! -d "react_test_app/public/docs" ]; then
            echo "JSDoc non généré !"
            exit 1
          fi

      # Copier la documentation JSDoc dans le dossier build
      - name: Copier JSDoc dans le build
        run: |
          if [ -d "react_test_app/public/docs" ]; then
            cp -r react_test_app/public/docs react_test_app/build/docs
          else
            echo "Pas de docs à copier"
            exit 1
          fi

      # Vérifier le contenu du build avant l'upload
      - name: Vérifier les fichiers du build avant upload
        run: |
          if [ ! "$(ls -A react_test_app/build)" ]; then
            echo "Le dossier build est vide !"
            exit 1
          else
            ls -R react_test_app/build
          fi

      # Configuration de GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      # Upload des fichiers de build (incluant JSDoc) comme artefact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: react_test_app/build
  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    needs: build_test
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
 
 