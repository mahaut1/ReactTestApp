name: Build and Test React Application

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci and test
        run: |
          cd react_test_app
          npm ci
          npm run build --if-present
          npm test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./react_test_app/coverage/clover.xml
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
        # Upload entire repository
          path: react_test_app/build
          if-no-files-found: error

  generate_jsdoc:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Generate JSDoc
        run: npm run jsdoc

      - name: Upload JSDoc artifact
        uses: actions/upload-artifact@v4
        with:
          name: jsdoc
          path: public/docs/
          if-no-files-found: error

# Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a page deployment
    permissions:
      pages: write
      id-token: write
   # Add a dependency to the build job
    needs: build_test
    
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
   
